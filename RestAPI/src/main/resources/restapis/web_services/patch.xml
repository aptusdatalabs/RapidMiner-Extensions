<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../../../../../rapidminerreferencemanual/documentation2html.xsl"?>
<p1:documents
	xmlns:p1="http://rapid-i.com/schemas/documentation/reference/1.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://rapid-i.com/schemas/documentation/reference/1.0 ">

	<operator key="operator.restapis:patch" locale="en"
		version="6.0.000">
		<title>Patch Request</title>
		<synopsis>Update only the specified fields of an entity at a URI. A
			PATCH request is idempotent. Idempotency is the main difference
			between the expectations of PUT versus a POST request.
		</synopsis>


		<outputPorts>
			<port name="output" type="com.rapidminer.example.ExampleSet">
				The data if responded back via the url is displayed through this port.
			</port>
		</outputPorts>

		<!-- description of the parameters and the corresponding values -->
		<parameters>
			<parameter key="url" type="string">
				Enter the url to reach
			</parameter>
			<parameter key="parameters" type="list">
				The params for the http request could be defined here
			</parameter>
			<parameter key="headers" type="list">
				The headers for the http request could be defined here
			</parameter>
			<parameter key="body category" type="drop-down">
				The body type along with the text/json/javascript/xml/html data could
				be submitted.
			</parameter>
		</parameters>


		<tutorialProcesses>
			<tutorialProcess key="process.python.clustering"
				title="PATCH Request">
				<description>
					<paragraph>
						This tutorial includes the workflow of how a PATCH Rest
						API operator works with any url.
					</paragraph>
				</description>
				<process version="8.1.000">
					<context>
						<input />
						<output />
						<macros />
					</context>
					<operator activated="true" class="process"
						compatibility="9.2.000" expanded="true" name="Process"
						origin="GENERATED_TUTORIAL">
						<parameter key="logverbosity" value="init" />
						<parameter key="random_seed" value="2001" />
						<parameter key="send_mail" value="never" />
						<parameter key="notification_email" value="" />
						<parameter key="process_duration_for_mail" value="30" />
						<parameter key="encoding" value="SYSTEM" />
						<process expanded="true">
							<operator activated="true" class="restapis:patch"
								compatibility="1.0.000" expanded="true" height="68"
								name="PATCH Request" origin="GENERATED_TUTORIAL" width="90"
								x="246" y="85">
								<list key="Parameters" />
								<list key="Headers" />
								<parameter key="Body Category"
									value="x-www-form-urlencoded" />
								<list key="Key-Val Data" />
								<parameter key="Raw data" value="Text" />
							</operator>
							<connect from_op="PATCH Request" from_port="output"
								to_port="result 1" />
							<portSpacing port="source_input 1" spacing="0" />
							<portSpacing port="sink_result 1" spacing="0" />
							<portSpacing port="sink_result 2" spacing="0" />
							<description align="center" color="gray"
								colored="true" height="105" resized="false" width="180" x="197"
								y="186">This operator performs a PATCH request on the given URL
							</description>
							<description align="center" color="yellow"
								colored="true" height="139" resized="false" width="126" x="29"
								y="36">The input connection need not be connected, as the data will
								be fetched from the internet and not the repositories.
							</description>
							<description align="center" color="red"
								colored="true" height="105" resized="false" width="180" x="439"
								y="36">The result of the request is shown as a JSON output
							</description>
						</process>
					</operator>
				</process>

			</tutorialProcess>
		</tutorialProcesses>




		<relatedDocuments>
			<!-- ... -->
		</relatedDocuments>
	</operator>
</p1:documents>
